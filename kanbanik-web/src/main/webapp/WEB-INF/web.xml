<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">

	<!-- 	MongoDB connection configuration -->
	<context-param>
		<param-name>MONGODB_HOST</param-name>
		<param-value>127.0.0.1</param-value>
	</context-param>
	<context-param>
		<param-name>MONGODB_PORT</param-name>
		<param-value>27017</param-value>
	</context-param>
	<context-param>
		<param-name>MONGODB_DATABASE</param-name>
		<param-value>kanbanikdb</param-value>
	</context-param>
	<context-param>
		<param-name>MONGODB_AUTHENTICATION_REQUIRED</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>MONGODB_USER</param-name>
		<param-value></param-value>
	</context-param>
	<context-param>
		<param-name>MONGODB_PASSWORD</param-name>
		<param-value></param-value>
	</context-param>
    <!-- By default, when the clients sends the accept-encoding header with value gzip, the answer will be gzipped-->
    <!-- Since the default gzip implementation on some JREs may be broken, this switch can turn this ability off -->
    <!-- and make Kanbanik ignore the accept-encoding  header -->
    <context-param>
        <param-name>ENABLE_GZIP_COMMUNICATION</param-name>
        <param-value>true</param-value>
    </context-param>

	<!--Allows / disallows the following headers:-->
	<!--"Access-Control-Allow-Origin", "*"-->
	<!--"Access-Control-Allow-Methods", "PUT, GET, POST, DELETE, OPTIONS"-->
	<!--"Access-Control-Allow-Headers","origin, access-control-allow-methods, content-type, access-control-allow-origin, access-control-allow-headers"-->
	<!--"Access-Control-Max-Age", "1800"-->
	<context-param>
		<param-name>ENABLE_ACCESS_CONTROL_HEADERS</param-name>
		<param-value>false</param-value>
	</context-param>

	<listener>
		<listener-class>com.googlecode.kanbanik.server.KanbanikContextListener
		</listener-class>
	</listener>

	<listener>
		<listener-class>com.googlecode.kanbanik.server.MigrateDbListener
		</listener-class>
	</listener>

	<servlet>
		<servlet-name>kanbanikApi</servlet-name>
		<servlet-class>com.googlecode.kanbanik.api.KanbanikApi</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>kanbanikApi</servlet-name>
		<url-pattern>/api</url-pattern>
	</servlet-mapping>

	<servlet>
		<description>AtmosphereServlet</description>
		<servlet-name>AtmosphereServlet</servlet-name>
		<servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
		<async-supported>true</async-supported>
		<load-on-startup>0</load-on-startup>
		<init-param>
			<param-name>org.atmosphere.cpr.packages</param-name>
			<param-value>com.googlecode.kanbanik.push</param-value>
		</init-param>

		<init-param>
			<param-name>org.atmosphere.cpr.AtmosphereInterceptor</param-name>
			<param-value>org.atmosphere.interceptor.HeartbeatInterceptor</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>AtmosphereServlet</servlet-name>
		<url-pattern>/events/*</url-pattern>
	</servlet-mapping>

	<!-- Default page to serve -->
	<welcome-file-list>
		<welcome-file>kanbanik.html</welcome-file>
	</welcome-file-list>

</web-app>
